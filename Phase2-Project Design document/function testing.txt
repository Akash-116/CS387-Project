1. Use case: Login
	positive case: If username and password are correct and a row exists in the corresponding table for that role then login is successful.
	
	negative case: If the pair (username, password) doesn't exist in the corresponding table for that role then login is unsuccessful.

2. Use Case: View Employee details
	positive case: If User login as a manager, then opens SingleEmployeePage to view details.

	negative case: If not logged in as a manager, then goes to LoginPage and says that, you dont have the permission.


3. Use Case: Delete Employee details
	positive case: If the employee details entered match with a row in the database then that row is deleted.

	negative case: If the employee details entered do not match with a row in the database then a error message saying "the given details donot match with any employee" is shown.

4. Use Case: Add Employee Details
	positive case: Giving all the required inputs of the employee(username,pswd,name,ph_no,addr) and the User logged in as a manager.
	
	negative case: Not giving some field of employee(like username or pswd) or the User not logged in as a Manager.

5. Use Case: View Dish details
	positive case: If logged in as any user, then opens SingleDishPage to view Dish details.

	negative case: If not logged in, then goes to LoginPage and says to Login.


6. Use Case: Delete dish 
	positive case: If the dish details entered match with a row in the dish table in the database then that row is deleted.

	negative case: If the dish details entered do not match with a row in the database then a error message saying "the given details donot match with any dish" is shown.


7. Use Case: Add Dish details
	positive case: Giving all the required inputs of the Dish(dish_name,dish_type,cost) and the User logged in as a manager or a Chef.

	negative case:  Not giving some required field of Dish(like dish_name or dish_type or cost) or the User not logged in as a Manager  and Chef.


8. Use Case: View Item details
	positive case: If logged in as any employee, then opens ItemsPage to view Items details.

	negative case:  If not logged in as a employee, then goes to LoginPage and says that, you dont have the permission.


9. Use Case: View Items purchased and used up on that day
	positive case: If logged in as a Manager, then opens PerDayPage to view DailyUsage Details

	negative case: If not logged in as a manager, then goes to LoginPage and says that, you dont have the permission.


10. Use Case: View Table Status
	positive case: If logged in as any employee, then opens TablesPage to view Tables status.

	negative case: If not logged in as a employee, then goes to LoginPage and says that, you dont have the permission.


11. Use Case: View order history details
	positive case: If logged in as a Manager or Billing Manager, then opens PerDayPage to view Order History.

	negative case: If not logged in as a Manager or a Billing Manager, then goes to LoginPage and says that, you dont have the permission.


12. Use Case: View customer details 
	positive case: If logged in as a Manager or Customer, then opens CustomerDetailsPage.

	negative case: If not logged in as a Manager or a Customer, then goes to LoginPage and says that, you dont have the permission.


13. Use Case: View offer details
	positive case: If logged in as a Manager or Customer, then opens SingleOfferPage.

	negative case: If not logged in as a Manager or a Customer, then goes to LoginPage and says that, you dont have the permission.


14. Use Case: View delivery person details
	positive case: If logged in as a Manager, then opens DeliveryPersonPage

	negative case: If not logged in as a Manager, then goes to LoginPage and says that, you dont have the permission.


15. Use Case: View menu and select items
	positive case: If logged in as a customer, then goes to DishesPage and selecting an item goes to SingleDishPage.

	negative case: If not logged in as a Customer, then goes to LoginPage and says that, you have to Login.


16. Use Case: View cart and confirm the order   
	positive case: If logged in as a customer, then goes to CartPage.

	negative case: If not logged in as a Customer, then goes to LoginPage and says that, you have to Login.


17. Use Case: View previous orders
	positive case: If logged in as a customer, then shows their previous orders.

	negative case: If not logged in as a customer then this page will not be accessible.


18. Use Case: Change account details
	positive case: If logged in as customer then we will allow them to change their account details if the changes done are valid.

	negative case: If not logged in as customer then we will show a error message.


19. Use Case: Change table status
	positive case: If logged in as manager or head waiter and If the given table exists then it will change the table's status accordingly.

	negative case: If not logged in as manager or if the specified table does'nt exist then it will give a appropriate error message.


20. Use case : Update about items
	positive case: If logged in as manager or chef ,or automatically when a order is delivered/served. if the given items exist then they get updated.

	negative case: If the login is not as a mangaer or chef or if the given item does not exist then we show an appropriate error message.


21. Use Case: Create an order
	positive case: If logged in as manager or head waiter or customer and the dishes are all available then the order will be accepted

	negative case: If logged in as a delivery person or waiter or if any of the dishes is not available.


22. Use Case: Assign a delivery person
	This happens automatically or can be done by manager/ head waiter so if it is done manually we will also check if the person assigning the delivery person has corresponding authority to do so.
	
	positive case: If the given delivery person exists in the  employee table and checks if they are out for delivery or on leave or they left , if not then it changes the status of the delivery person to out for delivery.

	negative case: If the given delivery person doesn't exist or if he has left or on leave or out for delivery then it gives a appropriate error message.

